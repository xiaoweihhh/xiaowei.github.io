<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python自动化例子</title>
      <link href="/2021/08/27/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BE%8B%E5%AD%90/"/>
      <url>/2021/08/27/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BE%8B%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>实现Python自动化的一些基础知识和例子</p><span id="more"></span><h1 id="Python自动化"><a href="#Python自动化" class="headerlink" title="Python自动化"></a>Python自动化</h1><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="基本步骤："><a href="#基本步骤：" class="headerlink" title="基本步骤："></a>基本步骤：</h3><ol><li><p><code>import re</code>导入正则表达式模块</p></li><li><p>用re.compile()函数创建一个Regex对象（记得使用原始字符串）</p></li><li><p>向Regex 对象的search()方法传入想查找的字符串。它返回一个Match 对象</p></li><li><p>调用Match 对象的group()方法，返回实际匹配文本的字符串</p></li></ol><h3 id="正则表达式符号："><a href="#正则表达式符号：" class="headerlink" title="正则表达式符号："></a>正则表达式符号：</h3><ul><li>?匹配零次或一次前面的分组。</li><li>*匹配零次或多次前面的分组。</li><li>+匹配一次或多次前面的分组。</li><li>{n}匹配n 次前面的分组。</li><li>{n,}匹配n 次或更多前面的分组。</li><li>{,m}匹配零次到m 次前面的分组。</li><li>{n,m}匹配至少n 次、至多m 次前面的分组。</li><li>{n,m}?或*?或+?对前面的分组进行非贪心匹配。</li><li>^spam 意味着字符串必须以spam 开始。</li><li>spam$意味着字符串必须以spam 结束。</li><li>.匹配所有字符，换行符除外。</li><li>\d、\w 和\s 分别匹配数字、单词和空格。</li><li>\D、\W 和\S 分别匹配出数字、单词和空格外的所有字符。</li><li>[abc]匹配方括号内的任意字符（诸如a、b 或c）。</li><li>[^abc]匹配不在方括号内的任意字符。</li></ul><h3 id="贪心和非贪心匹配"><a href="#贪心和非贪心匹配" class="headerlink" title="贪心和非贪心匹配"></a>贪心和非贪心匹配</h3><p>python的正则表达式默认是贪心的,在有二义的情况下，会尽可能匹配最长的字符串。非贪心版本会匹配尽可能最短的字符串。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="拷贝粘贴字符串"><a href="#拷贝粘贴字符串" class="headerlink" title="拷贝粘贴字符串"></a>拷贝粘贴字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拷贝粘贴字符串</span></span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文本从剪切板中复制到text</span></span><br><span class="line">text = pyperclip.paste()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对获取的文本进行处理在每行前加*，如删除每行末尾的空格，将文本转换成大写或小写</span></span><br><span class="line">lines = text.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lines)):</span><br><span class="line">    lines[i] = <span class="string">&#x27;* &#x27;</span> + lines[i]</span><br><span class="line">text = <span class="string">&#x27;\n&#x27;</span>.join(lines)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将text复制到剪切板</span></span><br><span class="line">pyperclip.copy(text)</span><br></pre></td></tr></table></figure><h3 id="口令保管箱"><a href="#口令保管箱" class="headerlink" title="口令保管箱"></a>口令保管箱</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#项目：口令保管箱</span></span><br><span class="line"><span class="comment">#abc.py</span></span><br><span class="line"><span class="keyword">import</span> sys, pyperclip</span><br><span class="line"></span><br><span class="line">PASSWORDS = &#123;<span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;FASDGFKAHSGDK&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;blog&#x27;</span>: <span class="string">&#x27;saljlgjka;lsgjl;sagj&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;luggage&#x27;</span>: <span class="string">&#x27;12345&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.arg) &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Usage: python pw.py [account] - copy account password&#x27;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line">    </span><br><span class="line">account = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> account <span class="keyword">in</span> PASSWORDS:</span><br><span class="line">    pyerclip.copy(PASSWORDS[account])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Password for &#x27;</span> + account + <span class="string">&#x27;copied to clipboard.&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;There is no account named &#x27;</span> + account)</span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Win+R  abc 参数</span><br><span class="line">@python.exe C:\Users\yxw\Desktop\PythonScripts\abc.py %*</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><h3 id="电话号码和E-mail-地址提取程序"><a href="#电话号码和E-mail-地址提取程序" class="headerlink" title="电话号码和E-mail 地址提取程序"></a>电话号码和E-mail 地址提取程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#项目：电话号码和E-mail 地址提取程序</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"></span><br><span class="line"><span class="comment">#为电话号码创建一个正则表达式</span></span><br><span class="line">phoneRegex = re.<span class="built_in">compile</span>(</span><br><span class="line">    <span class="string">r&#x27;&#x27;&#x27;(</span></span><br><span class="line"><span class="string">    (\d&#123;3&#125;|\(\d&#123;3&#125;))?</span></span><br><span class="line"><span class="string">    (\s|-|\.)?</span></span><br><span class="line"><span class="string">    (\d&#123;3&#125;)</span></span><br><span class="line"><span class="string">    (\s|-|\.)</span></span><br><span class="line"><span class="string">    (\d&#123;4&#125;</span></span><br><span class="line"><span class="string">    (\s*(ext|x|ext.)\s*(\d&#123;2,5&#125;))?</span></span><br><span class="line"><span class="string">)&#x27;&#x27;&#x27;</span>, re.VERBOSE)</span><br><span class="line"></span><br><span class="line"><span class="comment">#为E-mail 地址创建一个正则表达式</span></span><br><span class="line">emailRegex = re.<span class="built_in">compile</span>(</span><br><span class="line">    <span class="string">r&#x27;&#x27;&#x27;(</span></span><br><span class="line"><span class="string">    [a-zA-Z0-9._%+-]+</span></span><br><span class="line"><span class="string">    @</span></span><br><span class="line"><span class="string">    [a-zA-Z0-9.-]+</span></span><br><span class="line"><span class="string">    (\.[a-zA-Z]&#123;2,4&#125;)</span></span><br><span class="line"><span class="string">)&#x27;&#x27;&#x27;</span>, re.VERBOSE)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在剪贴板文本中找到所有匹配</span></span><br><span class="line">text = <span class="built_in">str</span>(pyperclip.paste())</span><br><span class="line"></span><br><span class="line">matches = []</span><br><span class="line"><span class="keyword">for</span> groups <span class="keyword">in</span> phoneRegex.findall(text):</span><br><span class="line">    phoneNum = <span class="string">&#x27;-&#x27;</span>.join([groups[<span class="number">1</span>], groups[<span class="number">3</span>], groups[<span class="number">5</span>]])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> groups[<span class="number">8</span>] != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(groups[<span class="number">8</span>])</span><br><span class="line">    phoneNum += <span class="string">&#x27; x&#x27;</span> + groups[<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">matches.append(phoneNum)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> groups <span class="keyword">in</span> emailRegex.findall(text):</span><br><span class="line">    matches.append(groups[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#所有匹配连接成一个字符串，复制到剪贴板   </span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(matches) &gt; <span class="number">0</span>:</span><br><span class="line">    pyperclip.copy(<span class="string">&#x27;\n&#x27;</span>.join(matches))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Copied to clipboard:&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>.join(matches))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;No phone numbers or email addresses found.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>识别文本的模式（并且可能用sub()方法替换它们）有许多不同潜在的应用。</p><p>寻找网站的URL，它们以http://或https://开始。</p><p> 整理不同日期格式的日期（诸如3/14/2015、03-14-2015 和2015/3/14），用唯一的标准格式替代。</p><p>删除敏感的信息，诸如社会保险号或信用卡号。</p><p>寻找常见打字错误，诸如单词间的多个空格、不小心重复的单词，或者句子末尾处多个感叹号.</p><h3 id="多重剪贴板"><a href="#多重剪贴板" class="headerlink" title="多重剪贴板"></a>多重剪贴板</h3><p>如果参数是save，那么将剪贴板的内容保存到关键字。</p><p>如果参数是list，就将所有的关键字拷贝到剪贴板。</p><p>否则，就将关键词对应的文本拷贝到剪贴板。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#多重剪贴板 mcb.pyw</span></span><br><span class="line"><span class="keyword">import</span> pyperclip, sys, shelve</span><br><span class="line"></span><br><span class="line">mcbShelve = shelve.<span class="built_in">open</span>(<span class="string">&#x27;mcb&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">3</span> <span class="keyword">and</span> sys.argv[<span class="number">1</span>].lower() == <span class="string">&#x27;save&#x27;</span>:</span><br><span class="line">    mcbShelve[sys.argv[<span class="number">2</span>]] = pyperclip.paste()</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(sys.argv) == <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">if</span> sys.argv[<span class="number">1</span>] == <span class="string">&#x27;list&#x27;</span>:</span><br><span class="line">        pyperclip.copy(<span class="built_in">str</span>(<span class="built_in">list</span>(mcbShelve.keys())))</span><br><span class="line">    <span class="keyword">elif</span> sys.argv[<span class="number">1</span>] <span class="keyword">in</span> mcbShelve:</span><br><span class="line">        pyperclip.copy(mcbShelve[sys.argv[<span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line">mcbShelve.close()</span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mcb.bat Win+R 运行 mcb 参数</span><br><span class="line">@pythonw.exe C:\Users\yxw\Desktop\PythonScripts\mcb.pyw %*</span><br></pre></td></tr></table></figure><h3 id="遍历文件夹"><a href="#遍历文件夹" class="headerlink" title="遍历文件夹"></a>遍历文件夹</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历目录</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> folderName, subfolders, filenames <span class="keyword">in</span> os.walk(<span class="string">&#x27;C:\\Users\yxw\\Desktop\\Windows驱动开发&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The current folder is &#x27;</span> + folderName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> subfolder <span class="keyword">in</span> subfolders:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;subfolder of &#x27;</span>+ folderName + <span class="string">&#x27; :&#x27;</span> + subfolder)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;file in &#x27;</span> +  folderName + <span class="string">&#x27;: &#x27;</span> +filename)</span><br></pre></td></tr></table></figure><h3 id="批量重命名"><a href="#批量重命名" class="headerlink" title="批量重命名"></a>批量重命名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 批量重命名</span></span><br><span class="line"><span class="keyword">import</span> shutil, os, re</span><br><span class="line"></span><br><span class="line"><span class="comment"># namePattern = re.compile(r&#x27;\[图灵程序设计丛书\]\.(.*)【neikuw.com】(.*?)$&#x27;)</span></span><br><span class="line"><span class="comment"># namePattern = re.compile(r&#x27;\[图灵交互设计丛书\]\.(.*)【neikuw.com】(.*?)$&#x27;)</span></span><br><span class="line">namePattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(\[.*?\]\.)(.*)【neikuw.com】(.*?)$&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> folderName, subfolders, filenames <span class="keyword">in</span> os.walk(<span class="string">&#x27;D:\\我的图书\\【内我】图灵程序设计丛书200本PDF版&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The current folder is &#x27;</span> + folderName)</span><br><span class="line"></span><br><span class="line"><span class="comment">#shutil.copytree(&#x27;D:\\我的图书\\【内我】图灵程序设计丛书200本PDF版&#x27;, &#x27;D:\\我的图书\\备份&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">    <span class="comment">#print(&#x27;file in &#x27; +  folderName + &#x27;: &#x27; +filename)</span></span><br><span class="line">    mo = namePattern.search(filename)</span><br><span class="line">    <span class="keyword">if</span>(mo != <span class="literal">None</span>):</span><br><span class="line">        <span class="built_in">print</span>(mo.group())</span><br><span class="line">        qian = mo.group(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># newFileName = filename.replace(&#x27;[图灵程序设计丛书].&#x27;, &#x27;&#x27;)</span></span><br><span class="line">        <span class="comment"># newFileName = filename.replace(&#x27;[图灵交互设计丛书].&#x27;, &#x27;&#x27;)</span></span><br><span class="line">        newFileName = filename.replace(qian, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="comment">#print(newFileName)</span></span><br><span class="line">        newFileName = newFileName.replace(<span class="string">&#x27;【neikuw.com】&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="comment">#print(newFileName)</span></span><br><span class="line"></span><br><span class="line">        shutil.move(<span class="string">&#x27;D:\\我的图书\\【内我】图灵程序设计丛书200本PDF版\\&#x27;</span> + filename, <span class="string">&#x27;D:\\我的图书\\去名的图书\\&#x27;</span> + newFileName)</span><br></pre></td></tr></table></figure><h3 id="运行其他程序"><a href="#运行其他程序" class="headerlink" title="运行其他程序"></a>运行其他程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用python运行其他程序</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="comment"># calcProc = subprocess.Popen(&#x27;C:\\Windows\\System32\\calc.exe&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#poll()函数是：进程仍在运行，返回None；进程已经终止，返回无错退出代码0，或其他整数退出代码</span></span><br><span class="line"><span class="comment"># print(calcProc.poll())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wait()是等启动的进程结束后，再继续运行</span></span><br><span class="line"><span class="comment"># calcProc.wait()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(calcProc.poll())</span></span><br><span class="line"></span><br><span class="line">hello = subprocess.Popen([<span class="string">&#x27;C:\\Users\\yxw\\AppData\\Local\\Programs\\Python\\Python37\\python.exe&#x27;</span>, <span class="string">&#x27;C:\\Users\\yxw\\Desktop\\PythonScripts\\hello.py&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># wait()是等启动的进程结束后，再继续运行</span></span><br><span class="line">hello.wait()</span><br></pre></td></tr></table></figure><h3 id="使用默认的应用程序打开文件"><a href="#使用默认的应用程序打开文件" class="headerlink" title="使用默认的应用程序打开文件"></a>使用默认的应用程序打开文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用默认的应用程序打开文件</span></span><br><span class="line"><span class="keyword">import</span> subprocess, time</span><br><span class="line"></span><br><span class="line">fileObj = <span class="built_in">open</span>(<span class="string">&#x27;hello.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">fileObj.write(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">fileObj.close()</span><br><span class="line"></span><br><span class="line">hello = subprocess.Popen([<span class="string">&#x27;start&#x27;</span>, <span class="string">&#x27;hello.txt&#x27;</span>], shell=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">hello.wait()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简单的倒计时程序"><a href="#简单的倒计时程序" class="headerlink" title="简单的倒计时程序"></a>简单的倒计时程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#倒计时，打开程序</span></span><br><span class="line"><span class="keyword">import</span> time, subprocess</span><br><span class="line"></span><br><span class="line">timeLeft = <span class="number">10</span></span><br><span class="line"><span class="keyword">while</span> timeLeft &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(timeLeft, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    timeLeft -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">s = subprocess.Popen([<span class="string">&#x27;start&#x27;</span>, <span class="string">&#x27;hello.txt&#x27;</span>], shell=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">s.wait()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="Task-Scheduler"><a href="#Task-Scheduler" class="headerlink" title="Task Scheduler"></a>Task Scheduler</h3><p>Windows上的Task Scheduler可以让编写的脚本在特定的时间启动。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python自动关机/重启脚本</title>
      <link href="/2021/08/27/Python%E8%87%AA%E5%8A%A8%E5%85%B3%E6%9C%BA-%E9%87%8D%E5%90%AF%E8%84%9A%E6%9C%AC/"/>
      <url>/2021/08/27/Python%E8%87%AA%E5%8A%A8%E5%85%B3%E6%9C%BA-%E9%87%8D%E5%90%AF%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>使用Python来实现Windows电脑自动进行关机和重启等操作，方法是通过定时读取邮件来获取命令。</p><span id="more"></span><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> imapclient</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date</span><br><span class="line"><span class="keyword">import</span> pyzmail</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findEmail</span>():</span></span><br><span class="line">    imapObj = imapclient.IMAPClient(<span class="string">&#x27;imap.qq.com&#x27;</span>, ssl=<span class="literal">True</span>)</span><br><span class="line">    imapObj.login(<span class="string">&#x27;2402433649&#x27;</span>, <span class="string">&#x27;wcmkbthqsomcebdd&#x27;</span>)</span><br><span class="line">    imapObj.select_folder(<span class="string">&#x27;INBOX&#x27;</span>, readonly=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    UIDs = imapObj.search([<span class="string">u&#x27;SINCE&#x27;</span>, date(<span class="number">2020</span>, <span class="number">7</span>, <span class="number">1</span>), <span class="string">u&#x27;UNSEEN&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(UIDs)</span><br><span class="line"></span><br><span class="line">    msgdict = imapObj.fetch(UIDs, [<span class="string">&#x27;BODY[]&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> UID <span class="keyword">in</span> UIDs:</span><br><span class="line">        message = pyzmail.PyzMessage.factory(msgdict[UID][<span class="string">b&#x27;BODY[]&#x27;</span>])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(message.get_subject(), <span class="built_in">type</span>(message.get_subject()))</span><br><span class="line">        <span class="built_in">print</span>(message.get_address(<span class="string">&#x27;from&#x27;</span>),<span class="built_in">type</span>(message.get_address(<span class="string">&#x27;from&#x27;</span>)) )</span><br><span class="line">        <span class="built_in">print</span>(message.get_address(<span class="string">&#x27;to&#x27;</span>), <span class="built_in">type</span>(message.get_address(<span class="string">&#x27;to&#x27;</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if message.text_part != None:</span></span><br><span class="line">        <span class="comment">#     mesInfo = message.text_part.get_payload().decode(message.text_part.charset)</span></span><br><span class="line">        <span class="comment">#     print(mesInfo)</span></span><br><span class="line">        <span class="comment"># a = message.get_address(&#x27;from&#x27;)</span></span><br><span class="line">        <span class="comment"># print(a[0], type(a[0]))</span></span><br><span class="line">        <span class="comment"># print(a[1], type(a[1]))</span></span><br><span class="line">        <span class="comment"># print(a[1]==&#x27;yuxw129@qq.com&#x27;)</span></span><br><span class="line">        <span class="comment"># print(message.get_subject() == &#x27;关机&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> message.get_address(<span class="string">&#x27;from&#x27;</span>)[<span class="number">1</span>] == <span class="string">&#x27;yuxw129@qq.com&#x27;</span> <span class="keyword">or</span> message.get_address(<span class="string">&#x27;from&#x27;</span>)[<span class="number">1</span>] == <span class="string">&#x27;1030508615@qq.com&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> message.get_subject() == <span class="string">&#x27;关机&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;删除邮件&#x27;</span>)</span><br><span class="line">                imapObj.delete_messages(UID)</span><br><span class="line">                imapObj.expunge()</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;删除完成&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;电脑正在关机&#x27;</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)</span><br><span class="line">                os.system(<span class="string">&#x27;shutdown -s -f -t 59&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> message.get_subject() == <span class="string">&#x27;重启&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;删除邮件&#x27;</span>)</span><br><span class="line">                imapObj.delete_messages(UID)</span><br><span class="line">                imapObj.expunge()</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;删除完成&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;电脑正在重启&#x27;</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)</span><br><span class="line">                os.system(<span class="string">&quot;shutdown -r -t 5&quot;</span>)</span><br><span class="line">                time.sleep(<span class="number">5</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;没有操作&#x27;</span>,<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    imapObj.logout()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">findEmail()</span><br><span class="line">findEmail()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/01/hello-world/"/>
      <url>/2021/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows驱动入门</title>
      <link href="/2021/06/25/Windows%E9%A9%B1%E5%8A%A8%E5%85%A5%E9%97%A8/"/>
      <url>/2021/06/25/Windows%E9%A9%B1%E5%8A%A8%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>下载并安装Windows驱动程序工具包，编写第一个驱动程序。</p><span id="more"></span><h4 id="安装WDK"><a href="#安装WDK" class="headerlink" title="安装WDK"></a>安装WDK</h4><p>微软官方教程：<a href="https://docs.microsoft.com/zh-cn/windows-hardware/drivers/download-the-wdk">https://docs.microsoft.com/zh-cn/windows-hardware/drivers/download-the-wdk</a></p><p>简单来说就是：</p><h5 id="安装Visual-Studio-2019"><a href="#安装Visual-Studio-2019" class="headerlink" title="安装Visual Studio 2019"></a>安装Visual Studio 2019</h5><p><a href="https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&rel=16">下载 Visual Studio Community 2019</a></p><p>安装或修改Visual Studio 2019 时，选择“使用 C++ 的桌面开发”工作负荷。选择安装 Windows 10 SDK (10.0.19041.1)</p><p>WDK 默认启用了 Spectre 缓解，需要安装Spectre 缓解库。“单个组件”中搜索 MSVC v142 - VS 2019 C++ x64/x86 Spectre-mitigated libs (v14.xx)</p><h5 id="安装WDK-1"><a href="#安装WDK-1" class="headerlink" title="安装WDK"></a>安装WDK</h5><p><a href="https://go.microsoft.com/fwlink/?linkid=2128854">下载wdk安装程序</a></p><h4 id="Windows驱动程序示例"><a href="#Windows驱动程序示例" class="headerlink" title="Windows驱动程序示例"></a>Windows驱动程序示例</h4><p><a href="https://github.com/Microsoft/Windows-driver-samples">微软在GitHub上的官方驱动程序例子</a></p><h4 id="第一个驱动程序"><a href="#第一个驱动程序" class="headerlink" title="第一个驱动程序"></a>第一个驱动程序</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;ntifs.h&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;ntddk.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wdm.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">DrvUnload</span><span class="params">(PDRIVER_OBJECT pdriver)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DbgPrint(<span class="string">&quot;Unload\n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">VOID <span class="title">DriveEntry</span><span class="params">(PDRIVER_OBJECT driver, PUNICODE_STRING reg_path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    driver-&gt;DriverUnload = DrvUnload;</span><br><span class="line">    </span><br><span class="line">    DbgPrint(<span class="string">&quot;----%wZ---\n&quot;</span>, reg_path);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="在虚拟机中运行编写的驱动程序"><a href="#在虚拟机中运行编写的驱动程序" class="headerlink" title="在虚拟机中运行编写的驱动程序"></a>在虚拟机中运行编写的驱动程序</h4><ol><li><p>首先要用数字签名工具对编写好的程序进行数字签名</p></li><li><p>之后通过DriverMonitor运行驱动</p></li><li><p>最后通过DebugView进行查看</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 驱动开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博文</title>
      <link href="/2021/06/24/%E6%88%91%E7%9A%84%E5%8D%9A%E6%96%87/"/>
      <url>/2021/06/24/%E6%88%91%E7%9A%84%E5%8D%9A%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>测试移动文件夹移动文件夹测试移动文件夹 测试移动文件夹测试移动文件夹</p><p>测试移动文件夹 测试移动文件夹 测试移动文件夹测试移动文件夹 </p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。1</p><span id="more"></span><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。2</p><p>我的随笔</p><p>test图片</p><p><img src="https://cdn.jsdelivr.net/gh/xiaoweihhh/tuchuang/20210626103749.png" alt="Snipaste_2021-06-23_19-01-35"></p><p>测试结束</p><p>测试移动文件夹</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
